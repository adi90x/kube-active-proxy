stages:
  - build
  - manifest

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE

image: docker
services:
  - docker:dind

before_script:
   - apk add --no-cache curl
   # https://servicelab.org/2018/09/13/platform-aware-docker-images/
   - mkdir -p /root/.docker && touch /root/.docker/config.json
   - 'echo {\"experimental\": \"enabled\"} >> /root/.docker/config.json'
   - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
   - version_available=$(curl --write-out %{http_code} --silent --output /dev/null https://gitlab.com/adi90x/kube-template-kap/builds/artifacts/$CI_BUILD_REF_NAME/browse?job=compile-go)
   - if [ $version_available == "302" ]; then build_version=artifacts/$CI_BUILD_REF_NAME; else build_version="artifacts/master"; fi
   - if [ $FORCE_KUBE_GEN_VERSION != "" ]; then build_version=$FORCE_KUBE_GEN_VERSION/artifacts; fi
   - if [ $CI_BUILD_REF_NAME == "master" ]; then tag="latest"; else tag=$CI_BUILD_REF_NAME; fi

build-image-amd64:
 stage: build
 script:
    - docker build --build-arg IMAGE_ARCH=amd64 --build-arg ARBNODE_VERSION=$arbnode_version -t $CONTAINER_IMAGE/amd64:$tag .
    - docker push $CONTAINER_IMAGE/amd64:$tag

build-image-arm64v8:
 stage: build
 script:
    - docker run --privileged yen3/binfmt-register set aarch64
    - docker build --build-arg IMAGE_ARCH=arm64v8 --build-arg ARBNODE_VERSION=$arbnode_version -t $CONTAINER_IMAGE/arm64v8:$tag .
    - docker push $CONTAINER_IMAGE/arm64v8:$tag

create-manifest:
 stage: manifest
 script:
   - docker pull $CONTAINER_IMAGE/amd64:$tag
   - docker pull $CONTAINER_IMAGE/arm64v8:$tag
   - docker manifest create $CONTAINER_IMAGE:$tag
        $CONTAINER_IMAGE/amd64:$tag
        $CONTAINER_IMAGE/arm64v8:$tag
   - docker manifest annotate --os linux --arch amd64
        $CONTAINER_IMAGE:$tag
        $CONTAINER_IMAGE/amd64:$tag
   - docker manifest annotate --os linux --arch arm64 --variant v8
        $CONTAINER_IMAGE:$tag
        $CONTAINER_IMAGE/arm64v8:$tag
   - docker manifest push $CONTAINER_IMAGE:$tag
